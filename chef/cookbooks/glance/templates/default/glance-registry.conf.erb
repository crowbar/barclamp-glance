[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = <%= node[:glance][:verbose] ? "True" : "False" %>

# Show debugging output in logs (sets DEBUG log level output)
debug = <%= node[:glance][:debug] ? "True" : "False" %>

# Address to bind the registry server
bind_host = <%= node[:glance][:registry][:bind_open_address] ? "0.0.0.0" : node[:glance][:registry][:bind_host] %>

# Port the bind the registry server to
bind_port = <%= node[:glance][:registry][:bind_port] %>

# Log to this file. Make sure you do not set the same log
# file for both the API and registry servers!
log_file = <%= node[:glance][:registry][:log_file] %>

# Send logs to syslog (/dev/log) instead of to file specified by `log_file`
use_syslog = <%= node[:glance][:use_syslog] ? "True" : "False" %>

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
sql_connection = <%= node[:glance][:sql_connection] %>

# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
# MySQL uses a default `wait_timeout` of 8 hours, after which it will drop
# idle connections. This can result in 'MySQL Gone Away' exceptions. If you
# notice this, you can lower this value to ensure that SQLAlchemy reconnects
# before MySQL can drop the connection.
sql_idle_timeout = 3600

# Limit the api to return `param_limit_max` items in a call to a container. If
# a larger `limit` query param is provided, it will be reduced to this value.
api_limit_max = 1000

# If a `limit` query param is not provided in an api request, it will
# default to `limit_param_default`
limit_param_default = 25

<% if node[:glance][:use_keystone] -%>
[paste_deploy]
flavor = keystone
<% end -%>

