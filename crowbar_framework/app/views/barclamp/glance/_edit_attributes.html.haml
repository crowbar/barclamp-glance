
%input#proposal_attributes{:type => "hidden", :name => "proposal_attributes", :value => @proposal.raw_data['attributes'][@proposal.barclamp].to_json}
%p
  %label{:for => "proposal_attributes"}= t('.attributes')
  = link_to t('raw'), proposal_barclamp_path(:id => @proposal.name, :controller => @proposal.barclamp, :dep_raw => @dep_raw, :attr_raw => true), :style => "float: right;"
  %div.container
    %p
      %label{ :for => :notifier_strategy }= t('.notifier_strategy')
      = select_tag :notifier_strategy, options_for_select([['Noop','noop']], @proposal.raw_data['attributes'][@proposal.barclamp]["notifier_strategy"]), :onchange => "update_value('notifier_strategy', 'notifier_strategy', 'string')"
    %p
      %label{ :for => :backing_type }= t('.backing_type')
      = select_tag :backing_type, options_for_select([['File','file'], ['Swift', 'swift']], @proposal.raw_data['attributes'][@proposal.barclamp]["default_store"]), :onchange => "update_value('default_store', 'default_store', 'string')"
    %p
      %label{ :for => :filesystem_store_datadir }= t('.filesystem_store_datadir')
      %input#filesystem_store_datadir{:type => "text", :name => "filesystem_store_datadir", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["filesystem_store_datadir"], :onchange => "update_value('filesystem_store_datadir','filesystem_store_datadir', 'string')"}
    -# %p
      %label{ :for => :swift_header }= t('.swift_header')
    %p
      %label{ :for => :swift_store_container }= t('.swift_store_container')
      %input#swift_store_container{:type => "text", :name => "swift_store_container", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["swift_store_container"], :onchange => "update_value('swift_store_container','swift_store_container', 'string')"}
    %p
      %label{ :for => :verbose }= t('.verbose')
      = select_tag :verbose, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["verbose"].to_s), :onchange => "update_value('verbose', 'verbose', 'boolean')"
    -#%p
      %label{ :for => :swift_store_auth_address }= t('.swift_store_auth_address')
      %input#swift_store_auth_address{:type => "text", :name => "swift_store_auth_address", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["swift_store_auth_address"], :onchange => "update_value('swift_store_auth_address','swift_store_auth_address', 'string')"}
    -#%p
      %label{ :for => :swift_store_create_container_on_put }= t('.swift_store_create_container_on_put')
      = select_tag :swift_store_create_container_on_put, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["swift_store_create_container_on_put"].to_s), :onchange => "update_value('swift_store_create_container_on_put', 'swift_store_create_container_on_put', 'boolean')"
    -#%p
      %label{ :for => :swift_store_user }= t('.swift_store_user')
      %input#swift_store_user{:type => "text", :name => "swift_store_user", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["swift_store_user"], :onchange => "update_value('swift_store_user','swift_store_user', 'string')"}
    -#%p
      %label{ :for => :swift_store_key }= t('.swift_store_key')
      %input#swift_store_key{:type => "text", :name => "swift_store_key", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["swift_store_key"], :onchange => "update_value('swift_store_key','swift_store_key', 'string')"}
    %p
      %label{ :for => :api_header }= t('.api_header')
    %div.container
      %p
        %label{ :for => :api_bind_open_address }= t('.api_bind_open_address')
        = select_tag :api_bind_open_address, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["api"]["bind_open_address"].to_s), :onchange => "update_value('api/bind_open_address', 'api_bind_open_address', 'boolean')"
    %p
      %label{ :for => :registry_header }= t('.registry_header')
    %div.container
      %p
        %label{ :for => :registry_bind_open_address }= t('.registry_bind_open_address')
        = select_tag :registry_bind_open_address, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["registry"]["bind_open_address"].to_s), :onchange => "update_value('registry/bind_open_address', 'registry_bind_open_address', 'boolean')"
    %p
      %label{ :for => :cache_header }= t('.cache_header')
    %div.container
      %p
        %label{ :for => :enable_caching }= t('.enable_caching')
        = select_tag :enable_caching, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["enable_caching"].to_s), :onchange => "update_value('enable_caching', 'enable_caching', 'boolean')"
      %p
        %label{ :for => :use_cachemanagement }= t('.use_cachemanagement')
        = select_tag :use_cachemanagement, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["use_cachemanagement"].to_s), :onchange => "update_value('use_cachemanagement', 'use_cachemanagement', 'boolean')"
      %p
        %label{ :for => :image_cache_datadir }= t('.image_cache_datadir')
        %input#image_cache_datadir{:type => "text", :name => "image_cache_datadir", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["image_cache_datadir"], :onchange => "update_value('image_cache_datadir','image_cache_datadir', 'string')"}
      %p
        %label{ :for => :image_cache_grace_period }= t('.image_cache_grace_period')
        %input#image_cache_grace_period{:type => "text", :name => "image_cache_grace_period", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["image_cache_grace_period"], :onchange => "update_value('image_cache_grace_period','image_cache_grace_period', 'string')"}
      %p
        %label{ :for => :image_cache_stall_timeout }= t('.image_cache_stall_timeout')
        %input#image_cache_stall_timeout{:type => "text", :name => "image_cache_stall_timeout", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["image_cache_stall_timeout"], :onchange => "update_value('image_cache_stall_timeout','image_cache_stall_timeout', 'string')"}
    %p
      %label{ :for => :database_header }= t('.database_header')
    %div.container
      %p
        %label{ :for => :sql_idle_timeout }= t('.sql_idle_timeout')
        %input#sql_idle_timeout{:type => "text", :name => "sql_idle_timeout", :'data-default' => @proposal.raw_data['attributes'][@proposal.barclamp]["sql_idle_timeout"], :onchange => "update_value('sql_idle_timeout','sql_idle_timeout', 'integer')"}
      %p
        %label{ :for => :database_instance }= t('.database_instance')
        = instance_selector("database", :database_instance, "database_instance", @proposal)
    %p
      %label{ :for => :use_keystone }= t('.use_keystone')
      = select_tag :use_keystone, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["use_keystone"].to_s), :onchange => "update_value('use_keystone', 'use_keystone', 'boolean')"
    %p
      %label{ :for => :keystone_instance }= t('.keystone_instance')
      = instance_selector("keystone", :keystone_instance, "keystone_instance", @proposal)
    %p
      %label{ :for => :use_syslog }= t('.use_syslog')
      = select_tag :use_syslog, options_for_select([['true','true'], ['false', 'false']], @proposal.raw_data['attributes'][@proposal.barclamp]["use_syslog"].to_s), :onchange => "update_value('use_syslog', 'use_syslog', 'boolean')"
    = render 'barclamp/git/pfsdeps.html.haml'
